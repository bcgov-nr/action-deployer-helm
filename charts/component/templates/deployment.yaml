{{- if .Values.deployment }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "component.fullname" . }}
  labels:
    {{- include "component.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "component.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if and .Values.vault .Values.vault.enabled }}
      annotations:
        {{- include "component.podAnnotations" . | nindent 8 }}
        {{- include "component.vaultAnnotations" . | nindent 8 }}
      {{- else }}
      annotations:
        {{- include "component.podAnnotations" . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "component.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- $configmap := .Values.configmap -}}
      {{- $secrets := .Values.secret -}}
      {{- if .Values.initContainers }}
      initContainers:
      {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: {{ .name }}:{{ .tag }}
          imagePullPolicy: Always
          env:
          {{- if $configmap }}
          {{- range $configmap.data }}
            - name: {{ .envName }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "component.fullname" $ }}
                  key: {{ .name }}
          {{- end }}
          {{- end }}
          {{- if and $secrets }}
          {{- range $secrets.data }}
            - name: {{ .envName }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "component.fullname" $ }}
                  key: {{ .name }}
          {{- end }}
          {{- end }}
      {{- end }}
      {{- end }}
      containers:
      {{- range .Values.containers }}
        - name: {{ .name }}
          image: {{ .name }}:{{ .tag }}
          imagePullPolicy: Always
          {{- if and .vault .vault.enabled}} # if vault is enabled for specific container
          args:
            - 'sh'
            - '-c'
            - '{{- range $k := .vault.secrets }}source /vault/secrets/{{$k}} && {{- end}}{{ .vault.entrypoint }}'
          {{- end}}
          env:
          {{- if $configmap }}
          {{- range $configmap.data }}
            - name: {{ .envName }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "component.fullname" $ }}
                  key: {{ .name }}
          {{- end }}
          {{- end }}
          {{- if and $secrets }}
          {{- range $secrets.data }}
            - name: {{ .envName }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "component.fullname" $ }}
                  key: {{ .name }}
          {{- end }}
          {{- end }}
          {{- if .Values.container.ports}}
          {{- with .Values.container.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- else }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          {{- end }}
          {{- if .Values.container.resources}}
          {{- with .Values.container.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- else }}
          resources:
            limits:
              cpu: 100m
              memory: 250Mi
            requests:
              cpu: 20m
              memory: 50Mi
          {{- end }}
          {{- if .Values.container.readinessProbe}}
          {{- with .Values.container.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- else }}
          readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
          {{- end }}
          {{- with .Values.container.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.container.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
